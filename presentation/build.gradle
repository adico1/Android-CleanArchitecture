apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
  maven { url 'https://maven.fabric.io/public' }
}

android {
  dexOptions {
    preDexLibraries = false
  }

  def globalConfiguration = rootProject.extensions.getByName("ext")

  compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
  buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

  defaultConfig {
    minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
    targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")

    applicationId globalConfiguration.getAt("androidApplicationId")
    versionCode globalConfiguration.getAt("androidVersionCode")
    versionName globalConfiguration.getAt("androidVersionName")
    testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    testApplicationId globalConfiguration.getAt("testApplicationId")


    javaCompileOptions {
      annotationProcessorOptions {
        includeCompileClasspath false
      }
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }

  packagingOptions {
    exclude 'LICENSE.txt'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
  }

  lintOptions {
    quiet true
    abortOnError false
    ignoreWarnings true
    disable 'InvalidPackage' //Some libraries have issues with this.
    disable 'OldTargetApi' //Lint gives this warning but SDK 20 would be Android L Beta.
    disable 'IconDensities' //For testing purpose. This is safe to remove.
    disable 'IconMissingDensityFolder' //For testing purpose. This is safe to remove.
  }

  signingConfigs {
    debug {
      storeFile file('../buildsystem/debug.keystore')
      storePassword 'android'
      keyAlias 'androiddebugkey'
      keyPassword 'android'
    }
  }

  buildTypes {
    debug {
      signingConfig signingConfigs.debug
    }
  }
  buildToolsVersion '27.0.3'
}

dependencies {
  def presentationDependencies = rootProject.ext.presentationDependencies
  def presentationTestDependencies = rootProject.ext.presentationTestDependencies
  def developmentDependencies = rootProject.ext.developmentDependencies

  implementation project(':domain')
  implementation project(':data')

  implementation presentationDependencies.dagger
  implementation 'com.google.firebase:firebase-crash:15.0.2'
  annotationProcessor presentationDependencies.daggerCompiler
  implementation presentationDependencies.butterKnife
  annotationProcessor presentationDependencies.butterKnifeCompiler
  implementation presentationDependencies.recyclerView

  implementation presentationDependencies.rxJava
  implementation presentationDependencies.rxAndroid
  compileOnly presentationDependencies.javaxAnnotation
  //implementation presentationDependencies.supportCoreUtils
  implementation presentationDependencies.supportAppCompact

  implementation 'com.google.firebase:firebase-core:15.0.2'
  implementation 'com.google.firebase:firebase-database:15.0.1'
  implementation 'com.google.firebase:firebase-auth:15.1.0'
  implementation 'com.google.android.gms:play-services-auth:15.0.1'

  androidTestImplementation presentationTestDependencies.mockito
  androidTestImplementation presentationTestDependencies.dexmaker
  androidTestImplementation presentationTestDependencies.dexmakerMockito
  androidTestImplementation presentationTestDependencies.espresso
  androidTestImplementation presentationTestDependencies.testingSupportLib

  //Development
  implementation('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') {
    transitive = true
  }
  implementation developmentDependencies.leakCanary
}

apply plugin: 'com.google.gms.google-services'
